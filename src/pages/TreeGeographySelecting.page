<apex:page id="thePage" sideBar="false" showHeader="false" controller="TreeGeographySelectingController">
<head>
	 
	<script type="text/javascript" src="{!URLFOR($Resource.JqueryForTree, '/jquery.js')}"/>	
	<script type="text/javascript" src="{!URLFOR($Resource.JqueryForTree, '/jquery-ui.custom.js')}"/>	
	<script type="text/javascript" src="{!URLFOR($Resource.JqueryForTree, '/jquery.cookie.js')}"/>	
	<apex:stylesheet value="{!URLFOR($Resource.JqueryForTree, '/ui.dynatree.css')}"/>
	<apex:stylesheet value="{!URLFOR($Resource.JqueryForTree, '/jquery-ui.css')}"/>
	<script type="text/javascript" src="{!URLFOR($Resource.JqueryForTree, '/jquery.dynatree.js')}"/>	 	
	<script type="text/javascript" src="{!URLFOR($Resource.JqueryForTree, '/jquery-ui.min.js')}"/>	
	
	<style>
	
		span.dynatree-empty, span.dynatree-vline, 
		span.dynatree-connector, span.dynatree-expander, 
		span.dynatree-icon, span.dynatree-checkbox, span.dynatree-radio, 
		span.dynatree-drag-helper-img, #dynatree-drop-marker {
			background-image: url("{!URLFOR($Resource.JqueryForTree, '/iconsvista.gif')}");
		}
		 
		.InputStyle {
			width: 98%;
			margin: 2px;
			display: inline-block;
			color: #999;
		}
		input {
			margin: 0;
			border-radius: 3px;
            border: 1px solid #999999;
            padding: 3px 5px;
			vertical-align: middle;
		}
		 .ui-autocomplete-loading { 
	        background: white url(/img/loading32.gif) right center no-repeat;
	        background-size:15px 15px; 
	    }  
	    .buttons{
	    	margin-left:  5px !important;
	    }
	    #salesforceSource_blurybackground{
	    	position: fixed !important;
	    }
	    .buttonsWidth{
	    	width: 70px !important;
	    }
	    body{
	    	background-color: #d8e3ee;
	    }
	    .dynatree-folder .dynatree-connector {
			background-image: url("{!URLFOR($Resource.JqueryForTree, '/iconsvista.gif')}") !important;
			background-position: 0px -80px;
			cursor: pointer;
		}
		span.dynatree-connector {
			background-image: none;
		}
	</style>
	<script>
		/** Bunhor @27-Mar-15: 
		 * set values from tree to json input when expanded/collapsed.
		 */ 
		function updateJsonExpand(flag, node){ 
			var json = document.getElementById('thePage:theForm:jsonObject').value;
			var allGeoDTO = JSON.parse( json );	// convert string to array
			
			expandedOrCollapsed(allGeoDTO, flag, node.data.key); //expanded/collapsed.
			 
			var jsonString = JSON.stringify(allGeoDTO); // convert array to json string					
			document.getElementById('thePage:theForm:jsonObject').value= jsonString; // add json string back into input for apex proccessind		    
		}
		/** Bunhor @23-Mar-15: 
		 * checked/unchecked this item and its child
		 */
		function expandedOrCollapsed(geoDTOs, flag, treeId){
			for(var i=0; i<geoDTOs.length; i++){ 
				var dto = geoDTOs[i];
				if(dto.treeId == treeId){
					dto.isExpand = flag;  
					return; 
				}  
				expandedOrCollapsed(dto.lstChild, flag, treeId); 
			} 
		} 
		
		 
		/** Bunhor @23-Mar-15: 
		 * set values from tree to json input, called from onselect event of dynatree 
		 */ 
		function updateJSON(flag, node){ 
			var json = document.getElementById('thePage:theForm:jsonObject').value;
			var allGeoDTO = JSON.parse( json );	// convert string to array
			
			updateThisDTO(allGeoDTO, flag, node.data.key); // checked/unchecked this item and its child
			updateUncheckedUpLevel(allGeoDTO, flag, node); // unchecked the parent if this item is unchecked
			 
			var jsonString = JSON.stringify(allGeoDTO); // convert array to json string					
			document.getElementById('thePage:theForm:jsonObject').value= jsonString; // add json string back into input for apex proccessind		    
		}
		/** Bunhor @23-Mar-15: 
		 * checked/unchecked this item and its child
		 */
		function updateThisDTO(geoDTOs, flag, treeId){
			for(var i=0; i<geoDTOs.length; i++){ 
				var dto = geoDTOs[i];
				if(dto.treeId == treeId){
					dto.isSelected = flag; 
					updateChildDTO(dto); 
					return; 
				}  
				updateThisDTO(dto.lstChild, flag, treeId); 
			} 
		} 
		/** Bunhor @23-Mar-15: 
		 * checked/unchecked its child
		 */
		function updateChildDTO(geoDTO){
			for(var i=0; i<geoDTO.lstChild.length; i++){
				var child = geoDTO.lstChild[i];
				child.isSelected  = geoDTO.isSelected; 
				updateChildDTO(child); 
			}
		}
		/** Bunhor @23-Mar-15: 
		 * unchecked the parent if this item is unchecked (recursived on node)
		 */
		function updateUncheckedUpLevel(geoDTOs, flag, node){
			if(flag) return; 
			var pNote = node.getParent();  
			if(pNote){
				updateDTOFromChild(geoDTOs, pNote.data.key); 
				updateUncheckedUpLevel(geoDTOs, flag, pNote);
			} 		 
		} 
		/** Bunhor @23-Mar-15: 
		 * unchecked the parent if this item is unchecked (recursived on dto)
		 */
		function updateDTOFromChild(geoDTOs, treeId){
			for(var i=0; i<geoDTOs.length; i++){
				var dto = geoDTOs[i]; 
				if(dto.treeId == treeId){ 
					dto.isSelected = false;
					return; 
				}
				updateDTOFromChild(dto.lstChild, treeId);
			}
		}
		 
		
		function setValueToParent(){				
				var isSaveError = document.getElementById('thePage:theForm:isSaveError'); 
				if(isSaveError.value == 'false'){
				
					var eleId = window.parent.document.getElementById('targetingId'); 
					var eleCity = window.parent.document.getElementById('cityDescription');	
					var eleCountry = window.parent.document.getElementById('countryDescription');					
					eleId.value =  document.getElementById('thePage:theForm:targetId').value;					
					eleCity.value =  document.getElementById('thePage:theForm:strValue').value;
					eleCountry.value = document.getElementById('thePage:theForm:countryValue').value;
				}
				
			}
			
		function checkTargetingBeforeSave(){
			var targeting = document.getElementById('thePage:theForm:targetId');
			var eleId = window.parent.document.getElementById('targetingId'); 
			if(targeting.value =='' && eleId.value !='none'){
				targeting.value = eleId.value;
			}
			saveRecords();
		}
		 
		function initializeTree()
	    {
			//ul -> li -> ul -> li -> ul -> li  
			var selectedGeo = document.getElementById("thePage:theForm:selectedGeography").value;

			var tree = document.getElementById("tree");
			var ulTop = document.createElement("ul");
			ulTop.style.display = "none";
			ulTop.id = "treeData"; 
	    	var liParent = document.createElement("li");
	    	liParent.innerHTML = "All Countries"; 
	    	liParent.className = "folder";
	    	liParent.id = "AllCountries";
	    	liParent.setAttribute("data","hideCheckbox:true,expand:true,select:"+{!isExistSelected});
	    	var ulParent = document.createElement("ul");
	    	var val = document.getElementById("thePage:theForm:jsonObject").value;
			var lstRecords = JSON.parse( val );	
			//Initial all countries to tree
			for(var i=0;i< lstRecords.length;i++) 
			{
				var treeParent = lstRecords[i];
				var liCountry = document.createElement("li");
				liCountry.id = treeParent.treeId;
				liCountry.className = treeParent.isFolder==true?"folder":"";
				liCountry.title = treeParent.treeName;
				liCountry.innerHTML = treeParent.treeName + " (" + treeParent.treeType + ")";
				liCountry.id = treeParent.treeId;
				// Set focus to node that has been clicked
				var fc = "";
				if(selectedGeo != "" && treeParent.treeId == selectedGeo)
				{
					fc = ",focus:true";
				}
				liCountry.setAttribute("data","pos:"+treeParent.pos+",expand:"+treeParent.isExpand+",select:"+treeParent.isSelected+fc);
				ulParent.appendChild(liCountry);
				
				var ulChild = createUlLiComp(treeParent);
				
				liCountry.appendChild(ulChild);
				ulParent.appendChild(liCountry);
			}
			
	    	liParent.appendChild(ulParent);
	    	ulTop.appendChild(liParent);
	    	tree.appendChild(ulTop);
	    }
		
		function createUlLiComp(treeParent) 
		{	
			var selectedGeo = document.getElementById("thePage:theForm:selectedGeography").value;
			var ulChild = document.createElement("ul");
				
			for(var j=0;j<treeParent.lstChild.length;j++)
			{
				
				var treeChild = treeParent.lstChild[j];
				
				var fc = "";
				if(selectedGeo != "" && treeChild.treeId == selectedGeo)
				{
					fc = ",focus:true";
				}
				
				var liChild = document.createElement("li");
				liChild.className = treeChild.isFolder==true?"folder":"";
				liChild.title = treeChild.treeName; 
				liChild.id = treeChild.treeId; 
				liChild.setAttribute("data","hideCheckbox:"+treeChild.isHideCheckBox+",parrentId:'"+treeChild.treeParrentId+"',treeLv:"+treeChild.treeLv+",pos:"+treeChild.pos+",expand:"+treeChild.isExpand+",select:"+treeChild.isSelected+",parrentPos:"+treeParent.pos+",parrentTopPos:"+treeParent.pos+",parrentTopKey:"+treeParent.treeId+",isFolder:"+treeChild.isFolder+fc);
				liChild.innerHTML = treeChild.treeName + " (" + treeChild.treeType + ")";
				
				if(treeChild.lstChild.length>0)
				{
					var ulVal = createUlLiComp(treeChild);
					liChild.appendChild(ulVal);
					
				}
				
				ulChild.appendChild(liChild);
						
			}
			return ulChild;
			
		}
		
		
		
	</script>

</head>

<body   style="margin-left: 5px;margin-right: 5px;">
<apex:form id="theForm" >
	<apex:inputHidden value="{!isSaveError}" id="isSaveError"/>	
	<apex:inputHidden value="{!targetId}" id="targetId"/>	
	<apex:inputHidden value="{!strValue}" id="strValue"/>
	<apex:inputHidden value="{!countryValue}" id="countryValue"/>		
	<apex:inputHidden value="{!selectedGeography}" id="selectedGeography"/>
	<apex:inputHidden value="{!jsonObject}" id="jsonObject"/>
	<apex:inputHidden value="{!searchFilter}" id="searchFilter"/>
	<apex:actionFunction name="addCountry" action="{!addCountry}" rerender="theTreeContent,theMessages,jsonObject" status="status"/> 
	<apex:actionFunction name="saveRecords" action="{!saveRecords}" rerender="theTreeContent,theMessages,isSaveError,targetId,strValue,countryValue,selectedGeography" onComplete="setValueToParent();" status="status"/> 			
	<apex:actionFunction name="getGeographies" action="{!getGeographies}" rerender="theTreeContent,theMessages,jsonObject" status="status"/>
	
	
	 <apex:pageMessages id="theMessages"/> 
		<div style="margin-top: 5px">			              			 	   	  			  		  			
			<input type="text" class="InputStyle" id="searchCountry" placeholder="Country search" onKeypress="if (event.keyCode == 13){  addCountry();return false;}"/>	<!-- onkeydown="if (event.keyCode == 13){  addCountry();return false;}" -->
		</div>
		<table width="100%">
			<tr>
				<td valign="top">				
					<apex:outputPanel id="theTreeContent" >		
					  	<div id="tree" style="height: 400px"> 
					  		<script>
					              initializeTree(); 
					         </script>
					   </div>
					    <script type="text/javascript">
						   $(function(){
						        $("#tree").dynatree({
						       		 checkbox: true, // Show checkboxes.
						       		 selectMode: 3, // Bunhor @23-Mar-15: change selectMode from 2 to 3
						       		// persist: true,// Persist expand-status to a cookie
						       		// cookieId: "CountryAndCityGumTree",// Choose a more unique name, to allow multiple trees.
						       		onClick: function(node, event) { 
					       	 			if( node.getEventTargetType(event) == "title" && node.data.key !="AllCountries" && node.data.isFolder == true ){	
					       	 				$('[id$=selectedGeography]').val(node.data.key);
				       	 					
					       	  				getGeographies();
						       	   			return false; 
					       	 			}    
						      		},
								    onKeydown: function(node, event) {
								        if( event.which == 32 ) {
								          node.toggleSelect();
								          return false;
								        }
								   },
								   fx: { height: "toggle", duration: 200 },
								   onSelect: function (flag, node){ 
								   		updateJSON(flag, node); // Bunhor @23-Mar-15: Whenever checked or unchecked > set value to json input string 
								   }
								   ,onExpand: function(flag, node){
								   		updateJsonExpand(flag, node); // Bunhor @27-Mar-15: set value to json input when expanded/collapsed.
								   }
								   
						      });
						       
						    }); 
			    		</script>
				   </apex:outputPanel>
	   			</td>
	   			<td align="center" valign="middle">
	   				<div > <apex:commandButton value="Save" onclick="checkTargetingBeforeSave();return false;"   styleClass="buttons buttonsWidth" status="status"/></div>
	   				<div style="margin-top:  10px;display:none;"> <apex:commandButton action="{!resetCountry}"  value="Reset tree"  rerender="theTreeContent,theMessages"  styleClass="buttons" status="status"/></div>
	   				<div style="margin-top:  10px;"><apex:commandButton rendered="{!Not(isShowCancel)}" value="Cancel" onclick=" window.close();return false;"  styleClass="buttons buttonsWidth" /></div>
	   			</td>
			</tr>
		</table>
	    <apex:actionStatus id="status">
                <apex:facet name="start">
                    <c:load BackColor="#efefef" borderColor="#efefef" borderSize="3" height="50px" width="180px" Message="Please, wait..." messageStyle="color:darkred;font-size:10pt;font-family:arial;font-weight:bold;" imageUrl="/img/loading.gif"/>
                </apex:facet>
       </apex:actionStatus>  
   </apex:form>
  </body>
  
  	<script type="text/javascript">
		//without this, tabclick will stop working after jQuery lib imported.
     var $ = jQuery.noConflict();
    jQuery(document).ready(function($) {
	    	 
	      var PLACEHOLDER = 'Country search'; 
		  var itemObjects;		  
		  var queryTerm;  
		  
		  $('[id$=searchCountry]').autocomplete({
			        minLength: 2,
			        source: function(request, response) {
			                    queryTerm = request.term;			                   
			                   TreeGeographySelectingController.searchCountry(request.term, function(result, event){
			                        if(event.type == 'exception') {
			                              alert(event.message);
			                        } else {			                        	
			                             itemObjects = result;
			                             response(itemObjects);
			                        }
			                    });
			               },
			        focus: function( event, ui ) {
			                $('[id$=searchCountry]').val( ui.item.name  );
			                return false;
			                },
			        select: function( event, ui ) {
			         
			                    $('[id$=searchCountry]').val( ui.item.Name);	
			                    $('[id$=selectedGeography]').val( ui.item.Id);	
			                    $('[id$=searchFilter]').val( ui.item.Type__c );	     
			                    //case pressing key enter
			                    if(event.which==13){ 
			                    	addCountry();
			                    	return false;
			                    }  
			                    return false;
			                    
			                    
			                },
			})			     
			.data( "autocomplete" )._renderItem = function( ul, item ) {
		        var entry = "<a>" + item.Name +'('+ item.Type__c + ')' ;			       
		        entry = entry + "</a>"; 
		        entry = entry.replace(queryTerm, "<b>" + queryTerm + "</b>");
		        return $( "<li></li>" )
		            .data( "item.autocomplete", item )
		            .append( entry )
		            .appendTo( ul );
		    };
			        
		    // Add or remove placeholder values
		    $('[id$=searchCountry]').val(PLACEHOLDER);
		    $('[id$=searchCountry]').on("focus",  function(event){
		        $tgt = $(event.target);
		        if($tgt.val() === PLACEHOLDER ){
		            $tgt.val('');		           
		        } 
		    });
		    $('[id$=searchCountry]').on( "blur",  function(event){
		        $tgt = $(event.target);
		        if($tgt.val() === '' ){
		            $tgt.val(PLACEHOLDER);			          
		        }
		    });
    });
    
    
    
  </script>
  
 
  
  
</apex:page>